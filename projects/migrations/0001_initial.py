# Generated by Django 4.2.20 on 2025-04-28 09:29

import datetime
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Project Name')),
                ('estimate_number', models.CharField(blank=True, max_length=50, unique=True, verbose_name='Estimate Number')),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Project Date')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20, verbose_name='Status')),
                ('customer_name', models.CharField(blank=True, max_length=255, verbose_name='Customer Name')),
                ('customer_location', models.CharField(blank=True, max_length=255, verbose_name='Location')),
                ('customer_phone', models.CharField(blank=True, max_length=50, verbose_name='Phone Number')),
                ('project_type', models.CharField(choices=[('tiling', 'Tiling'), ('pavement', 'Pavement'), ('masonry', 'Masonry'), ('carpentry', 'Carpentry'), ('painting', 'Painting'), ('plumbing', 'Plumbing'), ('others', 'Others')], default='tiling', max_length=20, verbose_name='Project Type')),
                ('measurement_unit', models.CharField(choices=[('meters', 'Meters'), ('feet', 'Feet'), ('inches', 'Inches'), ('centimeters', 'Centimeters')], default='meters', max_length=20, verbose_name='Measurement Unit')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('wastage_percentage', models.DecimalField(decimal_places=2, default=Decimal('10'), help_text='Percentage added to material quantities for wastage.', max_digits=5, verbose_name='Wastage Percentage (%)')),
                ('profit_type', models.CharField(choices=[('percentage', 'Percentage'), ('fixed', 'Fixed Amount'), ('per_area', 'Per Unit Area')], default='percentage', max_length=20, verbose_name='Profit Type')),
                ('profit_value', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=10, verbose_name='Profit Value')),
                ('total_area', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=14, verbose_name='Total Area Calculated')),
                ('total_material_cost', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=16, verbose_name='Total Material Cost')),
                ('total_labor_cost', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=16, verbose_name='Total Labor Cost')),
                ('subtotal_cost', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=16, verbose_name='Subtotal Cost (Material + Labor)')),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=16, verbose_name='Grand Total Cost (incl. Profit)')),
                ('cost_per_area', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Cost Per Unit Area')),
                ('estimated_days', models.IntegerField(default=1, verbose_name='Estimated Days')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='projects', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Project',
                'verbose_name_plural': 'Projects',
                'ordering': ['-date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Tile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('processed_image', models.ImageField(upload_to='tiles/media/processed/', verbose_name='Processed Image')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='Uploaded At')),
            ],
            options={
                'verbose_name': 'Tile Image',
                'verbose_name_plural': 'Tile Images',
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='Unit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('abbreviation', models.CharField(blank=True, max_length=10, verbose_name='Abbreviation')),
            ],
            options={
                'verbose_name': 'Unit',
                'verbose_name_plural': 'Units',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Worker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('labourer', 'Labourer'), ('master', 'Master'), ('supervisor', 'Supervisor'), ('tiler', 'Tiler'), ('mason', 'Mason'), ('carpenter', 'Carpenter'), ('painter', 'Painter'), ('plasterer', 'Plasterer'), ('others', 'Others')], max_length=20, verbose_name='Role')),
                ('count', models.PositiveIntegerField(default=1, verbose_name='Number of Workers')),
                ('rate', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Rate')),
                ('rate_type', models.CharField(choices=[('daily', 'Daily'), ('hourly', 'Hourly')], default='daily', max_length=10, verbose_name='Rate Type')),
                ('coverage_area', models.DecimalField(blank=True, decimal_places=2, help_text='Area this group can cover per day. Set by views/external logic.', max_digits=10, null=True, verbose_name='Coverage Area per Day')),
                ('special_equipment_cost_per_day', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Special Equipment Cost/Day')),
                ('total_cost', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=16, verbose_name='Total Labor Cost for this group')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workers', to='projects.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'Worker Group',
                'verbose_name_plural': 'Worker Groups',
                'ordering': ['role'],
            },
        ),
        migrations.CreateModel(
            name='TilingRoomDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_object_id', models.PositiveIntegerField()),
                ('stair_length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Stair Length')),
                ('stair_breadth', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Stair Breadth')),
                ('number_of_steps', models.IntegerField(blank=True, null=True, verbose_name='Number of Steps')),
                ('landing_length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Landing Length')),
                ('landing_breadth', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Landing Breadth')),
                ('number_of_landings', models.IntegerField(blank=True, null=True, verbose_name='Number of Landings')),
                ('has_metal_strip', models.BooleanField(default=False, verbose_name='Has Metal Strip')),
                ('room_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Tiling Room Details',
                'verbose_name_plural': 'Tiling Room Details',
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Room/Area Name')),
                ('room_type', models.CharField(choices=[('bathroom', 'Bathroom'), ('living_room', 'Living Room'), ('corridor', 'Corridor'), ('bedroom', 'Bedroom'), ('compound', 'Compound'), ('porch', 'Porch'), ('dining', 'Dining'), ('fence_wall', 'Fence Wall'), ('kitchen', 'Kitchen'), ('master_bedroom', 'Master Bedroom'), ('staircase', 'Staircase'), ('other', 'Other')], default='other', max_length=20, verbose_name='Room Type')),
                ('length', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Length')),
                ('breadth', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Breadth')),
                ('height', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Height')),
                ('details_object_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Details ID')),
                ('floor_area', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=14, verbose_name='Floor Area Calculated')),
                ('wall_area', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=14, verbose_name='Wall Area Calculated')),
                ('total_area', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=14, verbose_name='Total Area Calculated')),
                ('details_content_type', models.ForeignKey(blank=True, limit_choices_to={'model__in': ('tilingroomdetails', 'paintingroomdetails')}, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype', verbose_name='Details Type')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='projects.project', verbose_name='Project')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='PaintingRoomDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_object_id', models.PositiveIntegerField()),
                ('door_count', models.IntegerField(blank=True, null=True, verbose_name='Number of Doors')),
                ('door_area', models.DecimalField(blank=True, decimal_places=2, help_text='Area to subtract from wall area for one door.', max_digits=10, null=True, verbose_name='Area per Door')),
                ('window_count', models.IntegerField(blank=True, null=True, verbose_name='Number of Windows')),
                ('window_area', models.DecimalField(blank=True, decimal_places=2, help_text='Area to subtract from wall area for one window.', max_digits=10, null=True, verbose_name='Area per Window')),
                ('num_paint_coats', models.IntegerField(blank=True, null=True, verbose_name='Number of Paint Coats')),
                ('surface_type', models.CharField(blank=True, max_length=100, verbose_name='Surface Type')),
                ('room_content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name': 'Painting Room Details',
                'verbose_name_plural': 'Painting Room Details',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('default_unit_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Default Unit Price')),
                ('default_coverage_area', models.DecimalField(blank=True, decimal_places=2, help_text='Default area covered per unit (e.g., sqm per liter).', max_digits=10, null=True, verbose_name='Default Coverage Area per Unit')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.unit', verbose_name='Unit')),
                ('user', models.ForeignKey(blank=True, help_text='Leave blank for a global material.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_materials', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
                'ordering': ['name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='DynamicSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_wall_coverage_rate', models.DecimalField(decimal_places=2, default=Decimal('12'), help_text='Default wall area covered per worker group per day (e.g., sqm/day).', max_digits=10, verbose_name='Default Wall Coverage Rate')),
                ('default_floor_coverage_rate', models.DecimalField(decimal_places=2, default=Decimal('14'), help_text='Default floor area covered per worker group per day (e.g., sqm/day).', max_digits=10, verbose_name='Default Floor Coverage Rate')),
                ('default_additional_days', models.IntegerField(default=0, help_text='Default number of additional buffer days for projects.', verbose_name='Default Additional Days')),
                ('default_painter_coverage_rate', models.DecimalField(blank=True, decimal_places=2, help_text='Default wall/ceiling area covered per painter per day (e.g., sqm/day).', max_digits=10, null=True, verbose_name='Default Painter Coverage Rate')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Dynamic Setting',
                'verbose_name_plural': 'Dynamic Settings',
            },
        ),
        migrations.CreateModel(
            name='ProjectMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Material Name')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Unit Price')),
                ('quantity', models.DecimalField(decimal_places=2, help_text='Quantity needed for this project BEFORE wastage. Set by views/external logic.', max_digits=12, verbose_name='Quantity Needed (Raw)')),
                ('quantity_with_wastage', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=12, verbose_name='Quantity with Wastage')),
                ('total_price', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=16, verbose_name='Total Price')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='project_usages', to='projects.material', verbose_name='Material')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='projects.project', verbose_name='Project')),
                ('unit', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.unit', verbose_name='Unit')),
            ],
            options={
                'verbose_name': 'Project Material',
                'verbose_name_plural': 'Project Materials',
                'ordering': ['name'],
                'unique_together': {('project', 'material')},
            },
        ),
    ]
